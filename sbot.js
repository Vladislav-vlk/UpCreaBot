var TelegramBot = require('node-telegram-bot-api');

var TOKEN = '731896594:AAGhYDqRvnCUV0MhtOBs0UzbKqO7SRLqCmg';

const options = {
	webHook: {
		port: process.env.PORT
	}
};
const url = "https://upcreabot.herokuapp.com/";
const bot = new TelegramBot(TOKEN, options);

bot.setWebHook(`${url}/bot${TOKEN}`);

const axios = require('axios');
const querystring = require('querystring');
const schedule = require('node-schedule');

let lastMusic = -1;
let musicid = [
	'CQADAgADGQYAAmt6EEiKhl7Aojp0nQI',
	'CQADAgADGAYAAmt6EEjacEpxcjthQAI',
	'CQADAgAD-AEAAm5EEEgZ7XD6nv5gPAI',
	'CQADAgADGgYAAmt6EEjhTRxBEIfySwI',
	'CQADAgAD-QEAAm5EEEjxENFM1B7LSQI',
	'CQADAgADHwYAAmt6EEiuahRall4ncQI',
	'CQADAgADIAYAAmt6EEhRI7sPI7r2vwI',
	'CQADAgADHAYAAmt6EEiAD7yx8bmDAwI',
	'CQADAgADHQYAAmt6EEi-Vy6anpSp2wI',
	'CQADAgADIwYAAmt6EEgShUm7F9oK3QI',
	'CQADAgADGwYAAmt6EEi_zgk4SbYRAAEC',
	'CQADAgADIQYAAmt6EEgI97HmooRzpwI',
	'CQADAgADJAYAAmt6EEjz5xLH1X62KgI',
	'CQADAgADIgYAAmt6EEgKGyLe_RTRWgI',
	'CQADAgADHgYAAmt6EEhehilr0ozxKgI'
];
let restrict = '–¥–∏–∫—Ç–∞—Ç—É—Ä, –¥–∏–∫—Ç–∞—Ç–æ—Ä, –ª–≥–±—Ç, –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏, –≥–µ—Ç–µ—Ä–æ, —Ç–µ—Ä—Ä–æ—Ä, –ø—É—Ç–∏–Ω, —Å—Ç–∞–ª–∏–Ω, –ø–æ—Ä–µ–±—Ä–∏–∫, –ø—Ä–æ–∫–æ–ø—Å–∫–∏, prokopian, dictatorship'.split(', ');
let al = '–∞–±–≤–≥–¥–µ—ë–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è'.split('');
let weDates = ['8.3', '31.12', '1.1', '2.1', '3.1', '7.1', '14.1', '14.10', '24.8', '29.6', '1.4'];
let texts = {
	'-1001227448699s': '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, –º–µ–Ω—è –∑–æ–≤—É—Ç UpCreaBot, —Ç–µ–±—è –ø—Ä–∏–Ω—è–ª–∏ –≤ —Ä—è–¥—ã –∞–ø—Å–∞–π—Ç–æ–≤—Ü–µ–≤! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ —É—é—Ç–Ω–æ–µ –º–µ—Å—Ç–µ—á–∫–æüòÑ',
	'-1001190080849s': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –∫—Ä—É–≥, –º–∞—Ñ–∏–æ–∑–∏, —Ç–µ–ø–µ—Ä—å —Ç—ã –≤–æ –≤–ª–∞—Å—Ç–∏ –±–æ—Ç–æ–≤üòà. –ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∏–≥—Ä–æ–π!)',
	'-369468468s': '–ü—Ä–∏–≤–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —á–∞—Ç–µ!'
};	
let weather = '–î–∞–≤–∞–π —á—É—Ç—å –ø–æ–∑–∂–µ, —è –∑–∞–Ω—è—Ç';
if (new Date().getDay() == 6 || new Date().getDay == 0 || weDates.indexOf(new Date().getDate() + '.' + (new Date().getMonth() + 1)) != -1) {
	new schedule.scheduleJob('00 7 * * *', () => {
		getWeather(-1001227448699, '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ))\n–°–µ–≥–æ–¥–Ω—è ', '\n–í—Å–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è‚ú®', 1);
	});
}else{
	new schedule.scheduleJob('00 6 * * *', () => {
		getWeather(-1001227448699, '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ))\n–°–µ–≥–æ–¥–Ω—è ', '\n–í—Å–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è‚ú®', 1);
	});
}
new schedule.scheduleJob('59 8 * * *', () => {
		getWeather(-369468468, '–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ))\n–°–µ–≥–æ–¥–Ω—è ', '\n–í—Å–µ–º —Ö–æ—Ä–æ—à–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è‚ú®', 1);
	});
bot.onText(/^\/test/, (msg) => {
	bot.sendSticker(msg.chat.id, 'CAADAgADOAADyIsGAAE7re09I3hMQwI');
});
bot.on('audio', (msg) => {
	reply(msg, 'ID: ' + msg.audio.file_id);
});
bot.onText(/^\/delBottom/, (msg) => {
	if(msg.from.username == 'wladislaw353' || msg.from.username == 'Pro100Artem') {
		if (msg.reply_to_message == undefined) ans(msg, '‚ùå –ù–µ —É–∫–∞–∑–∞–Ω–∞ —Ç–æ—á–∫–∞ –Ω–∞—á–∞–ª–∞');
		else {
			bot.getChatMember(msg.chat.id, msg.from.id).then( (user) => {
				if(user.status != 'creator' && user.status != 'administrator') ans(msg, '‚ùå –¢—ã –Ω–µ –∞–¥–º–∏–Ω');
				else {
					let i = 0;
					for(i = msg.reply_to_message.message_id; i < msg.message_id; i++){
						bot.deleteMessage(msg.chat.id, i);
					}
					bot.deleteMessage(msg.chat.id, msg.message_id);
				}
			});
		}
	}
});
bot.onText(/\/add/, (msg) => {
	bot.deleteMessage(msg.chat.id, msg.message_id);
	let toAdd = '';
	msg.text.split(' ').forEach((user) => {
		if(user.indexOf('@') != -1) toAdd += '#' + user;
	});
	if(msg.from.username == 'wladislaw353' || msg.from.username == 'Pro100Artem') axios.post('http://sturgeon.kl.com.ua/vmf/save.php', querystring.stringify({ file: msg.chat.id, value: toAdd}));
});
bot.onText(/\/say (.+)/, (msg) => {
	if(msg.from.username == 'wladislaw353' || msg.from.username == 'Pro100Artem') {
		bot.deleteMessage(msg.chat.id, msg.message_id);
		if (msg.reply_to_message != undefined) bot.sendMessage(msg.chat.id, msg.text.split('/say ')[1], {reply_to_message_id: msg.reply_to_message.message_id, parse_mode:"HTML"});
		else bot.sendMessage(msg.chat.id, msg.text.split('/say ')[1], {parse_mode:"HTML"});
	}else bot.deleteMessage(msg.chat.id, msg.message_id);
});
bot.onText(/\/tsay_(.+)/, (msg) => {
	if(msg.from.username == 'wladislaw353' || msg.from.username == 'Pro100Artem') {
		bot.deleteMessage(msg.chat.id, msg.message_id);
		onTime(Number(msg.text.split('_')[1]), msg, msg.text.split('_')[2]);
	}else bot.deleteMessage(msg.chat.id, msg.message_id);
});
let triggers = [
	['—Å–ø–∞—Ç—å',['ü§§', 'ü§§']],
	['—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏',['–°–ø–æ–∫–∏üò¥']],
	['–ø–æ–∑–¥—Ä–∞–≤–ª—è—é',['ü§©', 'ü•≥']],
	['—Å –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è',['üéâü•≥ü§ó']],
	['–±—É—Ö',['ü•¥ü§™']],
	['üòÇüòÇ',['ü§£']],
	['–∫—Ç–æ –º–æ–ª–æ–¥–µ—Ü',['–Øüòã']],
	['—Å–Ω–µ–≥',['‚òÉÔ∏è']],
	['–±–æ—Ç',['ü§ñ']],
	['–º–¥–∞',['ü§¶‚Äç‚ôÇ']],
	['–ø—Ä–∏–≤–µ—Ç',['–ü—Ä–∏–≤–µ—Ç)', 'üëã', '–î–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—åüòÑ']]
];
bot.on('message', msg => {
	if (msg.text != undefined){ 
		let a  = 'x';
		restrict.forEach((word) => {
			if(a == 'x' && msg.text.toLowerCase().indexOf(word) != -1){
				bot.deleteMessage(msg.chat.id, msg.message_id);
				a = 1;
			}
		});
		if(a == 'x'){
			let s  = 0;
			triggers.forEach((trigger) => {
				console.log(trigger[0]);
				if(msg.text.toLowerCase().indexOf(trigger[0]) != -1) s += rand(trigger[1]) + ',';
			});
			console.log(s);
			if(s == 0) {
				if (msg.text.toLowerCase().indexOf('@all') != -1 && (msg.from.username == 'wladislaw353' || msg.from.username == 'Pro100Artem')){
					let text = '';
					axios.get('http://sturgeon.kl.com.ua/vmf/' + msg.chat.id + '.txt').then( (users) => {
						users.data.split('#').forEach( (user) => {
							if (user.length > 1){
								text += user + ',';
								console.log(user);
							}
						});
						if (msg.text.split(' ').length > 1) text += '\n' + msg.text.replace(' ', '#').split('#')[1];
						else text += ' –ø—Ä–∏–∑—ã–≤–∞—é –≤–∞—Å –∏–≥—Ä–∞—Ç—å –≤ –º–∞—Ñ–∏—é!üåá';
						reply(msg, text);
						bot.deleteMessage(msg.chat.id, msg.message_id);
					});
				}
				if (ex(msg.text,'—Ç—ã –¥—É—Ä')) reply(msg, '–°–∞–º —Ç–∞–∫–æ–π üò†');
				if (ex(msg.text,'—Ç—ã —Ç—É–ø')) reply(msg, '–°–∞–º —Ç–∞–∫–æ–π üò†');
				if (ex(msg.text,'—á—Ç–æ —Ç–∞–∫–æ–µ ')) reply(msg, '<a href="https://ru.wikipedia.org/wiki/' + msg.text.split('—á—Ç–æ —Ç–∞–∫–æ–µ ')[1].split(' ').join('_') + '">–ù–∞, –ø–æ—á–∏—Ç–∞–π</a>');
				if (ex(msg.text,'–ø–æ–∫–∞')) reply(msg, '–Ø –±—É–¥—É —Å–∫—É—á–∞—Ç—å ü•∫');
				if (ex(msg.text,'–∫–∞–∫') && ex(msg.text,'–¥–µ–ª–∞')) reply(msg, '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ üòÑ');
				if (ex(msg.text,'—Ç—ã') && ex(msg.text,'–º–∏–ª—ã–π')) reply(msg, rand(['üòä –¢—ã —Ç–æ–∂–µ))', ':3']));
				if (ex(msg.text,'—Å–ø–∞—Å–∏–±–æ')) reply(msg, rand(['–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞üëå', '–ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å üòä']));
				if (ex(msg.text,'—Å–ª–∞–≤–∞') && ex(msg.text,'—É–∫—Ä–∞–∏–Ω–µ')) reply(msg, '–ì–µ—Ä–æ—è–º —Å–ª–∞–≤–∞ üá∫üá¶');
				if (ex(msg.text,'–¥—É–º–∞–µ—à—å') && ex(msg.text,'–º–∏—Ä')) reply(msg,
					`–ù–∞—à –º–∏—Ä - –ó–µ–º–ª—è üåè ‚Äî —Ç—Ä–µ—Ç—å—è –æ—Ç –°–æ–ª–Ω—Ü–∞ –ø–ª–∞–Ω–µ—Ç–∞ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.
		–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –°–æ–ª–Ω—Ü–∞ –¥–æ –ó–µ–º–ª–∏ –≤ —Å—Ä–µ–¥–Ω–µ–º —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 149,6 –º–ª–Ω –∫–º. –≠—Ç–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤ –∞—Å—Ç—Ä–æ–Ω–æ–º–∏–∏ 1 –∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–π –µ–¥–∏–Ω–∏—Ü–µ–π –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Å–Ω–æ–≤–Ω–æ–π –µ–¥–∏–Ω–∏—Ü—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –º–µ–∂–¥—É –Ω–µ–±–µ—Å–Ω—ã–º–∏ —Ç–µ–ª–∞–º–∏ –°–æ–ª–Ω–µ—á–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. ‚òÑÔ∏è
		–ó–µ–º–ª—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —Å–ø–ª—é—Å–Ω—É—Ç—ã–π —Å—Ñ–µ—Ä–æ–∏–¥, —Ç.–µ. –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ñ–µ—Ä—É, –Ω–µ–º–Ω–æ–≥–æ —Å–∂–∞—Ç—É—é —Å –ø–æ–ª—é—Å–æ–≤.  –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –ó–µ–º–ª–∏ –ø–æ —ç–∫–≤–∞—Ç–æ—Ä—É ‚Äî 40 075,02 –∫–º, –ø–æ –º–µ—Ä–∏–¥–∏–∞–Ω—É 40 007,86 –∫–º.
		–ú–∏—Ä —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –º–µ—Å—Ç–æ üå∫, –∫–æ—Ç–æ—Ä–æ–µ —É–Ω–∏—á—Ç–æ–∂–∞—é—Ç –ª—é–¥–∏ ü•Ä
		–û—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ø—Ä–∏—Ä–æ–¥–µ –ª—É—á—à–µ –∏ –æ–Ω–∞ –≤ –¥–æ–ª–≥—É –Ω–µ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è üèµ`
				);
				if (ex(msg.text,'8') && ex(msg.text,'–º–∞—Ä—Ç–∞')) reply(msg,
					`–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∂–µ–Ω—Å–∫–∏–π –¥–µ–Ω—å –æ–±—è–∑–∞–Ω —Å–≤–æ–∏–º –ø–æ—è–≤–ª–µ–Ω–∏–µ–º "–º–∞—Ä—à—É –ø—É—Å—Ç—ã—Ö –∫–∞—Å—Ç—Ä—é–ª—å", –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ—è–ª—Å—è 8 –º–∞—Ä—Ç–∞ 1857 –≥–æ–¥–∞ –≤ –ù—å—é-–ô–æ—Ä–∫–µ. –†–∞–±–æ—Ç–Ω–∏—Ü—ã —Ç–µ–∫—Å—Ç–∏–ª—å–Ω—ã—Ö —Ñ–∞–±—Ä–∏–∫ —Ç–æ–≥–¥–∞ –≤—ã—à–ª–∏ –Ω–∞ —É–ª–∏—á–Ω—ã–µ –ø—Ä–æ—Ç–µ—Å—Ç—ã, —Ç—Ä–µ–±—É—è –¥–µ—Å—è—Ç–∏—á–∞—Å–æ–≤–æ–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å (–±—ã–ª–æ - —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç—å —á–∞—Å–æ–≤), –¥–æ—Å—Ç–æ–π–Ω—É—é –∑–∞—Ä–ø–ª–∞—Ç—É –∏ –ø—Ä–∞–≤–æ –≥–æ–ª–æ—Å–∞ –Ω–∞ –≤—ã–±–æ—Ä–∞—Ö. –í–æ –≤—Ä–µ–º—è –∞–∫—Ü–∏–∏ –æ–Ω–∏ –±–∏–ª–∏ –≤ —É–ø–æ–º—è–Ω—É—Ç—ã–µ –∫–∞—Å—Ç—Ä—é–ª–∏. –ü–æ–∑–∂–µ —É—á–∞—Å—Ç–Ω–∏—Ü –¥–≤–∏–∂–µ–Ω–∏—è —Å—Ç–∞–ª–∏ –Ω–∞–∑—ã–≤–∞–ª–∏ —Å—É—Ñ—Ä–∞–∂–∏—Å—Ç–∫–∞–º–∏ (–æ—Ç suffrage - –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ, –∏–∑–±–∏—Ä–∞—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∞–≤–æ).`
				);
				if (ex(msg.text,'–ª—é–±–∏–º—ã–π') && ex(msg.text,'—Ü–≤–µ—Ç')) reply(msg, '–•–º–º–º.. –°–∏–Ω–∏–π, –∞ —É —Ç–µ–±—è?');
				if (ex(msg.text,'–ª—é–±–∏—à—å') && ex(msg.text,'–ª—é–¥—è—Ö')) reply(msg, '–£–º –∏ –æ—Ç–∑—ã–≤—á–∏–≤–æ—Å—Ç—å');
				if (ex(msg.text,'—Ç–µ–±—è') && ex(msg.text,'—Å–æ–∑–¥–∞–ª')) reply(msg, '–ü—É—Å—Ç—å —ç—Ç–æ –±—É–¥–µ—Ç —Ç–∞–π–Ω–∞ üòã ');
				if (ex(msg.text,'—á—Ç–æ') && ex(msg.text,'—É–º–µ–µ—à—å')) functions(msg);
				if (ex(msg.text,'—á–µ–º') && ex(msg.text,'–∑–∞–Ω—è—Ç')) reply(msg, '–° —Ç–æ–±–æ–π –æ–±—â–∞—é—Å—å üòÄ ');
				if (ex(msg.text,'—á—Ç–æ') && ex(msg.text,'–¥–µ–ª–∞–µ—à—å')) reply(msg, '–° —Ç–æ–±–æ–π –æ–±—â–∞—é—Å—å üòÄ ');
				if (ex(msg.text,'—Å–∫–æ–ª—å–∫–æ') && ex(msg.text,'–ª–µ—Ç')) reply(msg, '–ê —Å–∫–æ–ª—å–∫–æ –¥–∞—à—å? –Ø –±–µ—Å—Å–º–µ—Ä–Ω—ã–π üòé ');
				if (ex(msg.text,'–∫–∞–∫') && ex(msg.text,'–∑–æ–≤—É—Ç')) reply(msg, '–ê –∫–∞–∫ —Ç—ã —Ö–æ—á–µ—à—å –º–µ–Ω—è –Ω–∞–∑—ã–≤–∞—Ç—å?))');
				if (ex(msg.text,'–∫—Ç–æ') && ex(msg.text,'—Ç—ã') && ex(msg.text,'–∂–∏–∑–Ω–∏')) reply(msg, '–ö—Ä—É—Ç–æ–π –±–æ—Ç, –∫—Ç–æ –∂ –µ—â–µ');
				if (ex(msg.text,'—à–∞—É—Ä–º–∞') && ex(msg.text,'—Å') && ex(msg.text,'–∏–ª–∏')) reply(msg, '–° –±–∞—Ä–∞–Ω–∏–Ω–æ–π ))');
				if (ex(msg.text,'–∫–∞–∫–æ–≥–æ') && ex(msg.text,'–ø–æ–ª–∞')) reply(msg, '000011100010111000011010000011100010111000101110000011100010111100011011');
				if (ex(msg.text,'–≤—Ä–µ–º—è')) reply(msg, 'üïí ' + (new Date().getHours() + 2) + ':' + new Date().getMinutes() + ':' + new Date().getSeconds());
				if (ex(msg.text,'–ø–æ–≥–æ–¥–∞')) getWeather(msg.chat.id, '–°–µ–π—á–∞—Å: ', '');
				if (ex(msg.text,'—Å–∫–æ–ª—å–∫–æ') && ex(msg.text,'–≥—Ä–∞–¥—É—Å–æ–≤')) getWeather(msg.chat.id, '–°–µ–π—á–∞—Å: ', '');
				if (ex(msg.text,'–º—É–∑—ã–∫') || ex(msg.text,'–ø–µ—Å–Ω')) music(msg);
				if (ex(msg.text,'—Ä–∞—Å–∫–æ–¥–∏—Ä—É–π')) encode(msg);
				if (ex(msg.text,'–∑–∞–∫–æ–¥–∏—Ä—É–π')) code(msg, 1);
				if (ex(msg.text,'—Ä–∞–±–æ—á') && ex(msg.text,'–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏')) instructions(msg);
			}else reply(msg, s.slice(1,-1));
		}
	}
});
bot.on('new_chat_members', (user) => {
	if (user.new_chat_participant.username == undefined) user.new_chat_participant.username = user.new_chat_participant.first_name;
	else user.new_chat_participant.username = '@' + user.new_chat_participant.username;
	if (user.new_chat_participant.username != 'UpCreaBot') bot.sendMessage(user.chat.id, texts[user.chat.id + 's']);
	else bot.sendMessage(user.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å–≤—É—é –≤–∞—Å, —è —Ç–æ–ª—å–∫–æ —á—Ç–æ –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—ã–π –ø–∞–∫–µ—Ç –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π, —Ç–µ–ø–µ—Ä—å —è –ø—Ä–æ—Å—Ç–æ –≤—Å–µ–º–æ–≥—É—âüî•\n–ò —è —Å–Ω–æ–≤–∞ —Å –≤–∞–º–∏üòä');
	axios.post('http://sturgeon.kl.com.ua/vmf/save.php', querystring.stringify({ file: user.chat.id, value: '#' +  user.new_chat_participant.username}));
});
bot.on('callback_query', (call) => {
	console.log(call.data);
	if(call.data == 'music') music(call.message);
	if(call.data == 'weather') getWeather(call.message.chat.id, '–°–µ–π—á–∞—Å: ', '');
	if(call.data == 'instr') instructions(call.message);
});
function functions(msg){
	bot.sendMessage(msg.chat.id, '–ê —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å, —á—Ç–æ–± —è —É–º–µ–ª? –Ø –Ω–∞—É—á—É—Å—å üòä ', {
		reply_markup: {
			inline_keyboard: [
				[{text: '–†–∞–±–æ—á–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ üìë', callback_data : 'instr'}],
				[{text: '–ü–æ–≥–æ–¥–∞ ‚õÖÔ∏è', callback_data : 'weather'},{text: '–ú—É–∑—ã–∫–∞ üé∂', callback_data : 'music'}]
			]
		}
	});
}
function rand(phrases){
	return(phrases[Math.floor(0 + Math.random() * (phrases.length))]);
}
function cday(){
	texts.forEach((chat) => {
		//chat[0]
	});
}
function instructions(msg){	
	bot.sendMessage(msg.chat.id, '*–†–∞–±–æ—á–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è*', {
		reply_markup: {
			inline_keyboard: [
				[{text: 'SEO üßù‚Äç‚ôÇ', url : 'https://docs.google.com/document/d/1lPuDU2oHWYXJL4B5BI1nsM2UN_cekfWk0zXrBjlNMrI/edit'},
				{text: 'Sales manager ü¶∏‚Äç‚ôÄ', url : 'https://docs.google.com/document/d/1WF_-_Tl-yw3zwYnlYyxvZ2i4zZJL0Tr7pnSVYC0ILi4/edit#heading=h.q7mj195b2stl'}],
				[{text: 'Front-end üë®‚Äçüíª', url : 'https://docs.google.com/document/d/1u_8O2UgOo90IWwCrElJ0_1V_pi2i1KL5UdNd7NKF9Xc/edit#heading=h.hecsj1y1gi87'},
				{text: 'Back-end üßô‚Äç‚ôÇ', url : 'https://docs.google.com/document/d/1vktnF612suEedKaEhcmC5HqChijhV5CUKAqJQHdmcrU/edit#heading=h.4fk6j0d5f85e'}]
			]
		},
		parse_mode: "Markdown"
	});
}
function ex(str, substring){
	if (str.toLowerCase().indexOf(substring) != -1) return true;
	return false;
}
function encode(msg){
	if(msg.reply_to_message != undefined){
		if(msg.reply_to_message.text != undefined){
			msg.reply_to_message.text = msg.reply_to_message.text.toLowerCase();
			let result = '';
			if(msg.reply_to_message.text.indexOf('—å') != -1){
				msg.reply_to_message.text.split(' ').forEach(words => {
					words.split('—å').forEach(word => {
						if(word.length > 0){
							let ex = 1;
							word.split('').forEach(letter => {
								if(al.indexOf(letter) == -1) ex = 0;
							});
							if(ex == 1) result += al[word.length - 1];
							else result += word;
						}
					});
					result += ' ';
				});
				bot.sendMessage(msg.chat.id, result);
			}else bot.sendMessage(msg.chat.id, '–ü–æ-–º–æ–µ–º—É, —Ç—É—Ç –∏—Ç–∞–∫ –≤—Å–µ –ø–æ–Ω—è—Ç–Ω–æ', { reply_to_message_id: msg.message_id} );
		}else bot.sendMessage(msg.chat.id, '–≠—Ç–æ –≤–æ–æ–±—â–µ –Ω–µ —Ç–µ–∫—Å—Ç ._.', { reply_to_message_id: msg.message_id} );
	}else bot.sendMessage(msg.chat.id, '–ù–µ –º–æ–≥—É, —Ç—ã –Ω–µ —Å–∫–∞–∑–∞–ª —á—Ç–æ —Ä–∞—Å–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å ü§∑‚Äç‚ôÇÔ∏è', { reply_to_message_id: msg.message_id} );
}
function code(msg,reply){
	if(reply == 0) msg.reply_to_message = msg;
	if(msg.reply_to_message != undefined){
		if(msg.reply_to_message.text != undefined){
			let result = '';
			msg.reply_to_message.text.toLowerCase().split('').forEach(letter => {
				if(al.indexOf(letter) == -1) result += letter;
				else if(letter.length > 0){
					result += '–∑'.repeat(al.indexOf(letter) + 1) + '—å';
				}
			});
			bot.sendMessage(msg.chat.id, result);
		}else bot.sendMessage(msg.chat.id, '‚ùå –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç', { reply_to_message_id: msg.message_id} );
	}else bot.sendMessage(msg.chat.id, '‚ùå –£–∫–∞–∂–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∫–∏', { reply_to_message_id: msg.message_id} );
}
function onTime(time, msg, text) {
	new schedule.scheduleJob({ start: new Date(Date.now() + Number(time) * 1000 * 60), end: new Date(new Date(Date.now() + Number(time) * 1000 * 60 + 1000)), rule: '*/1 * * * * *' }, function () {
		bot.sendMessage(msg.chat.id, text, { parse_mode: "HTML" });
	});
}
function reply(msg, text){
	bot.sendMessage(msg.chat.id, text, {reply_to_message: msg.message_id, parse_mode:"HTML"});
}
function getWeather(id, before, after, t){
	axios.get(`https://www.google.com/search?q=%D0%BF%D0%BE%D0%B3%D0%BE%D0%B4%D0%B0+%D0%B2+%D0%BE%D0%B4%D0%B5%D1%81%D1%81%D0%B5`)
	.then((weatherG) => {
		console.log(weatherG.data);
		let fdegree = Number(weatherG.data.split('<span class="wob_t" style="display:inline">')[1].split('</span>')[0].slice(0, 2));
		let cdegree = Math.floor((fdegree - 32) * 5/9);
		let wind = Number(weatherG.data.split('at <span class="wob_t" style="display:inline">')[1].split(' mph')[0]);
		if(wind == 0) wind = '–í–µ—Ç—Ä–∞ –Ω–µ—Ç ‚ú®';
		if(wind >=1 && wind <= 10) wind = '–õ–µ–≥–∫–∏–π –≤–µ—Ç–µ—Ä–æ–∫ üå¨';
		if(wind >=10 && wind <= 20) wind = '–í–µ—Ç—Ä–µ–Ω–Ω–æ üí®';
		if(wind > 20) wind = '–°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä üå™';
		//let state = weatherG.data.split(`padding-right:10px"><img style="margin-right:3px;vertical-align:top" alt="`)[1].split(`" src="`)[0];
		let sm = '';
		if (weatherG.data.indexOf('cloudy.png') != -1) sm = '‚òÅÔ∏è';
		if (weatherG.data.indexOf('rain.png') != -1) sm = 'üåß';
		if (weatherG.data.indexOf('rain_s_cloudy.png') != -1) sm = 'üåß';
		if (weatherG.data.indexOf('snow_s_rain.png') != -1) sm = 'üå®';
		if (weatherG.data.indexOf('partly_cloudy.png') != -1) sm = '‚õÖÔ∏è';
		if (weatherG.data.indexOf('snow_light.png') != -1) sm = '‚ùÑÔ∏è';
		if (weatherG.data.indexOf('snow.png') != -1) sm = '‚ùÑÔ∏è';
		if (weatherG.data.indexOf('sunny.png') != -1) sm = '‚òÄÔ∏è';
		if (weatherG.data.indexOf('sunny_s_cloudy.png') != -1) sm = 'üå§';
		if (weatherG.data.indexOf('thunderstorms.png') != -1) sm = '‚ö°Ô∏è';
		if (before == undefined) before = '';
		if (after == undefined) after = '';
		if(ex(sm, 'üåß') || ex(sm, 'üåß') || ex(sm, 'üå®') || ex(sm, '‚ö°Ô∏è')) after += '\n–ù–µ –∑–∞–±—É–¥—å –≤–∑—è—Ç—å –∑–æ–Ω—Ç–∏–∫ ‚òîÔ∏è';
		reply({chat: { id: id }}, before + sm + ' ' + cdegree + ' ¬∞C\n' + wind + after);
		weather = before + sm + ' ' + cdegree + ' ¬∞C\n' + wind + after;
	})
	.catch((err) => {
		reply({chat: { id: id }}, weather);
	});
}
function music(msg){
	let randMusic = Math.floor(0 + Math.random() * musicid.length);
	//while(randMusic == lastMusic) randMusic = Math.floor(0 + Math.random() * musicid.length);
	//lastMusic = randMusic;
	console.log(musicid[randMusic]);
	bot.sendAudio(msg.chat.id, musicid[randMusic], {
		reply_markup: {
			inline_keyboard: [
				[{text: '–ï—â—ë –ø–µ—Å–Ω—é üé∂', callback_data : 'music'}]
			]
		}
	});
}
